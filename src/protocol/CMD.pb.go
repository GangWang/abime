// Code generated by protoc-gen-go.
// source: CMD.proto
// DO NOT EDIT!

/*
Package protocol is a generated protocol buffer package.

It is generated from these files:
	CMD.proto

It has these top-level messages:
	SessionMessage
	MessageReply
	RecvDataReply
	AppNetWorkStatus
	HttpResponse
	HttpError
	HttpData
	SocketConnect
	SocketSendRecvData
	MethodData
	WebViewData
	MemoryWaringData
	ThreadANR
	MetricData
	BatteryData
	FpsData
*/
package protocol

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type CmdType int32

const (
	CmdType_SESSION               CmdType = 888
	CmdType_SESSIONREPLY          CmdType = 889
	CmdType_RECVDATAREPLY         CmdType = 999
	CmdType_HTTP_DATA             CmdType = 1000
	CmdType_SOCKET_CONNECT        CmdType = 1010
	CmdType_SOCKET_SENDRECV_DATA  CmdType = 1011
	CmdType_WEBVIEW_DATA          CmdType = 1020
	CmdType_METHOD_DATA           CmdType = 1030
	CmdType_UPDATE_NETWORK_STATUS CmdType = 1040
	CmdType_MEMORY_WARING         CmdType = 1050
	CmdType_MAINTHREAD_ANR        CmdType = 1060
	CmdType_METRIC_DATA           CmdType = 1070
	CmdType_BATTERY_DATA          CmdType = 1071
	CmdType_FPS_DATA              CmdType = 1072
	CmdType_FPS_CALAMITY_DATA     CmdType = 1073
)

var CmdType_name = map[int32]string{
	888:  "SESSION",
	889:  "SESSIONREPLY",
	999:  "RECVDATAREPLY",
	1000: "HTTP_DATA",
	1010: "SOCKET_CONNECT",
	1011: "SOCKET_SENDRECV_DATA",
	1020: "WEBVIEW_DATA",
	1030: "METHOD_DATA",
	1040: "UPDATE_NETWORK_STATUS",
	1050: "MEMORY_WARING",
	1060: "MAINTHREAD_ANR",
	1070: "METRIC_DATA",
	1071: "BATTERY_DATA",
	1072: "FPS_DATA",
	1073: "FPS_CALAMITY_DATA",
}
var CmdType_value = map[string]int32{
	"SESSION":               888,
	"SESSIONREPLY":          889,
	"RECVDATAREPLY":         999,
	"HTTP_DATA":             1000,
	"SOCKET_CONNECT":        1010,
	"SOCKET_SENDRECV_DATA":  1011,
	"WEBVIEW_DATA":          1020,
	"METHOD_DATA":           1030,
	"UPDATE_NETWORK_STATUS": 1040,
	"MEMORY_WARING":         1050,
	"MAINTHREAD_ANR":        1060,
	"METRIC_DATA":           1070,
	"BATTERY_DATA":          1071,
	"FPS_DATA":              1072,
	"FPS_CALAMITY_DATA":     1073,
}

func (x CmdType) Enum() *CmdType {
	p := new(CmdType)
	*p = x
	return p
}
func (x CmdType) String() string {
	return proto.EnumName(CmdType_name, int32(x))
}
func (x *CmdType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CmdType_value, data, "CmdType")
	if err != nil {
		return err
	}
	*x = CmdType(value)
	return nil
}

type HttpErrorType int32

const (
	HttpErrorType_HttpErrorType_HTTP    HttpErrorType = 1
	HttpErrorType_HttpErrorType_Network HttpErrorType = 2
)

var HttpErrorType_name = map[int32]string{
	1: "HttpErrorType_HTTP",
	2: "HttpErrorType_Network",
}
var HttpErrorType_value = map[string]int32{
	"HttpErrorType_HTTP":    1,
	"HttpErrorType_Network": 2,
}

func (x HttpErrorType) Enum() *HttpErrorType {
	p := new(HttpErrorType)
	*p = x
	return p
}
func (x HttpErrorType) String() string {
	return proto.EnumName(HttpErrorType_name, int32(x))
}
func (x *HttpErrorType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HttpErrorType_value, data, "HttpErrorType")
	if err != nil {
		return err
	}
	*x = HttpErrorType(value)
	return nil
}

type MetricType int32

const (
	MetricType_Metric_Normal   MetricType = 1
	MetricType_Metric_Dot      MetricType = 2
	MetricType_Metric_DotStart MetricType = 3
	MetricType_Metric_DotEnd   MetricType = 4
)

var MetricType_name = map[int32]string{
	1: "Metric_Normal",
	2: "Metric_Dot",
	3: "Metric_DotStart",
	4: "Metric_DotEnd",
}
var MetricType_value = map[string]int32{
	"Metric_Normal":   1,
	"Metric_Dot":      2,
	"Metric_DotStart": 3,
	"Metric_DotEnd":   4,
}

func (x MetricType) Enum() *MetricType {
	p := new(MetricType)
	*p = x
	return p
}
func (x MetricType) String() string {
	return proto.EnumName(MetricType_name, int32(x))
}
func (x *MetricType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(MetricType_value, data, "MetricType")
	if err != nil {
		return err
	}
	*x = MetricType(value)
	return nil
}

type SessionMessage struct {
	Appkey           *string                    `protobuf:"bytes,1,req,name=appkey" json:"appkey,omitempty"`
	App              *SessionMessage_AppInfo    `protobuf:"bytes,2,req,name=app" json:"app,omitempty"`
	Device           *SessionMessage_DeviceInfo `protobuf:"bytes,3,req,name=device" json:"device,omitempty"`
	SessionId        *string                    `protobuf:"bytes,4,req,name=session_id" json:"session_id,omitempty"`
	SdkVersion       *string                    `protobuf:"bytes,5,req,name=sdkVersion" json:"sdkVersion,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *SessionMessage) Reset()         { *m = SessionMessage{} }
func (m *SessionMessage) String() string { return proto.CompactTextString(m) }
func (*SessionMessage) ProtoMessage()    {}

func (m *SessionMessage) GetAppkey() string {
	if m != nil && m.Appkey != nil {
		return *m.Appkey
	}
	return ""
}

func (m *SessionMessage) GetApp() *SessionMessage_AppInfo {
	if m != nil {
		return m.App
	}
	return nil
}

func (m *SessionMessage) GetDevice() *SessionMessage_DeviceInfo {
	if m != nil {
		return m.Device
	}
	return nil
}

func (m *SessionMessage) GetSessionId() string {
	if m != nil && m.SessionId != nil {
		return *m.SessionId
	}
	return ""
}

func (m *SessionMessage) GetSdkVersion() string {
	if m != nil && m.SdkVersion != nil {
		return *m.SdkVersion
	}
	return ""
}

type SessionMessage_AppInfo struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	PackageID        *string `protobuf:"bytes,2,req,name=packageID" json:"packageID,omitempty"`
	AppVersion       *string `protobuf:"bytes,3,req,name=appVersion" json:"appVersion,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionMessage_AppInfo) Reset()         { *m = SessionMessage_AppInfo{} }
func (m *SessionMessage_AppInfo) String() string { return proto.CompactTextString(m) }
func (*SessionMessage_AppInfo) ProtoMessage()    {}

func (m *SessionMessage_AppInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SessionMessage_AppInfo) GetPackageID() string {
	if m != nil && m.PackageID != nil {
		return *m.PackageID
	}
	return ""
}

func (m *SessionMessage_AppInfo) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

type SessionMessage_DeviceInfo struct {
	DeviceName       *string `protobuf:"bytes,1,req,name=deviceName" json:"deviceName,omitempty"`
	OsName           *string `protobuf:"bytes,2,req,name=osName" json:"osName,omitempty"`
	OsVersion        *string `protobuf:"bytes,3,req,name=osVersion" json:"osVersion,omitempty"`
	ScreenSize       *string `protobuf:"bytes,4,req,name=screenSize" json:"screenSize,omitempty"`
	DeviceID         *string `protobuf:"bytes,5,req,name=deviceID" json:"deviceID,omitempty"`
	Rooted           *bool   `protobuf:"varint,6,req,name=rooted" json:"rooted,omitempty"`
	DeviceCode       *string `protobuf:"bytes,7,opt,name=deviceCode" json:"deviceCode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SessionMessage_DeviceInfo) Reset()         { *m = SessionMessage_DeviceInfo{} }
func (m *SessionMessage_DeviceInfo) String() string { return proto.CompactTextString(m) }
func (*SessionMessage_DeviceInfo) ProtoMessage()    {}

func (m *SessionMessage_DeviceInfo) GetDeviceName() string {
	if m != nil && m.DeviceName != nil {
		return *m.DeviceName
	}
	return ""
}

func (m *SessionMessage_DeviceInfo) GetOsName() string {
	if m != nil && m.OsName != nil {
		return *m.OsName
	}
	return ""
}

func (m *SessionMessage_DeviceInfo) GetOsVersion() string {
	if m != nil && m.OsVersion != nil {
		return *m.OsVersion
	}
	return ""
}

func (m *SessionMessage_DeviceInfo) GetScreenSize() string {
	if m != nil && m.ScreenSize != nil {
		return *m.ScreenSize
	}
	return ""
}

func (m *SessionMessage_DeviceInfo) GetDeviceID() string {
	if m != nil && m.DeviceID != nil {
		return *m.DeviceID
	}
	return ""
}

func (m *SessionMessage_DeviceInfo) GetRooted() bool {
	if m != nil && m.Rooted != nil {
		return *m.Rooted
	}
	return false
}

func (m *SessionMessage_DeviceInfo) GetDeviceCode() string {
	if m != nil && m.DeviceCode != nil {
		return *m.DeviceCode
	}
	return ""
}

type MessageReply struct {
	Ret              *bool   `protobuf:"varint,1,req,name=ret" json:"ret,omitempty"`
	Probability      *int32  `protobuf:"varint,2,req,name=probability" json:"probability,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *MessageReply) Reset()         { *m = MessageReply{} }
func (m *MessageReply) String() string { return proto.CompactTextString(m) }
func (*MessageReply) ProtoMessage()    {}

func (m *MessageReply) GetRet() bool {
	if m != nil && m.Ret != nil {
		return *m.Ret
	}
	return false
}

func (m *MessageReply) GetProbability() int32 {
	if m != nil && m.Probability != nil {
		return *m.Probability
	}
	return 0
}

func (m *MessageReply) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type RecvDataReply struct {
	Recved           *bool   `protobuf:"varint,1,req,name=recved" json:"recved,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RecvDataReply) Reset()         { *m = RecvDataReply{} }
func (m *RecvDataReply) String() string { return proto.CompactTextString(m) }
func (*RecvDataReply) ProtoMessage()    {}

func (m *RecvDataReply) GetRecved() bool {
	if m != nil && m.Recved != nil {
		return *m.Recved
	}
	return false
}

func (m *RecvDataReply) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type AppNetWorkStatus struct {
	NetworkName      *string `protobuf:"bytes,1,req,name=networkName" json:"networkName,omitempty"`
	CarrierName      *string `protobuf:"bytes,2,req,name=carrierName" json:"carrierName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AppNetWorkStatus) Reset()         { *m = AppNetWorkStatus{} }
func (m *AppNetWorkStatus) String() string { return proto.CompactTextString(m) }
func (*AppNetWorkStatus) ProtoMessage()    {}

func (m *AppNetWorkStatus) GetNetworkName() string {
	if m != nil && m.NetworkName != nil {
		return *m.NetworkName
	}
	return ""
}

func (m *AppNetWorkStatus) GetCarrierName() string {
	if m != nil && m.CarrierName != nil {
		return *m.CarrierName
	}
	return ""
}

type HttpResponse struct {
	StatusCode       *int32  `protobuf:"varint,1,req,name=statusCode" json:"statusCode,omitempty"`
	HeaderField      *string `protobuf:"bytes,2,opt,name=headerField" json:"headerField,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HttpResponse) Reset()         { *m = HttpResponse{} }
func (m *HttpResponse) String() string { return proto.CompactTextString(m) }
func (*HttpResponse) ProtoMessage()    {}

func (m *HttpResponse) GetStatusCode() int32 {
	if m != nil && m.StatusCode != nil {
		return *m.StatusCode
	}
	return 0
}

func (m *HttpResponse) GetHeaderField() string {
	if m != nil && m.HeaderField != nil {
		return *m.HeaderField
	}
	return ""
}

type HttpError struct {
	ErrorCode        *int32         `protobuf:"varint,1,req,name=errorCode" json:"errorCode,omitempty"`
	ErrorMessage     *string        `protobuf:"bytes,2,req,name=errorMessage" json:"errorMessage,omitempty"`
	ErrorType        *HttpErrorType `protobuf:"varint,3,req,name=errorType,enum=protocol.HttpErrorType" json:"errorType,omitempty"`
	ResponseContent  *string        `protobuf:"bytes,4,opt,name=responseContent" json:"responseContent,omitempty"`
	HeaderField      *string        `protobuf:"bytes,5,opt,name=headerField" json:"headerField,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *HttpError) Reset()         { *m = HttpError{} }
func (m *HttpError) String() string { return proto.CompactTextString(m) }
func (*HttpError) ProtoMessage()    {}

func (m *HttpError) GetErrorCode() int32 {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return 0
}

func (m *HttpError) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *HttpError) GetErrorType() HttpErrorType {
	if m != nil && m.ErrorType != nil {
		return *m.ErrorType
	}
	return HttpErrorType_HttpErrorType_HTTP
}

func (m *HttpError) GetResponseContent() string {
	if m != nil && m.ResponseContent != nil {
		return *m.ResponseContent
	}
	return ""
}

func (m *HttpError) GetHeaderField() string {
	if m != nil && m.HeaderField != nil {
		return *m.HeaderField
	}
	return ""
}

type HttpData struct {
	Url              *string    `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	CastTime         *float64   `protobuf:"fixed64,2,req,name=castTime" json:"castTime,omitempty"`
	Error            *HttpError `protobuf:"bytes,3,opt,name=error" json:"error,omitempty"`
	ResponseSize     *int32     `protobuf:"varint,4,req,name=responseSize" json:"responseSize,omitempty"`
	RequestSize      *int32     `protobuf:"varint,5,req,name=requestSize" json:"requestSize,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *HttpData) Reset()         { *m = HttpData{} }
func (m *HttpData) String() string { return proto.CompactTextString(m) }
func (*HttpData) ProtoMessage()    {}

func (m *HttpData) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *HttpData) GetCastTime() float64 {
	if m != nil && m.CastTime != nil {
		return *m.CastTime
	}
	return 0
}

func (m *HttpData) GetError() *HttpError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *HttpData) GetResponseSize() int32 {
	if m != nil && m.ResponseSize != nil {
		return *m.ResponseSize
	}
	return 0
}

func (m *HttpData) GetRequestSize() int32 {
	if m != nil && m.RequestSize != nil {
		return *m.RequestSize
	}
	return 0
}

type SocketConnect struct {
	RemoteIp         *string  `protobuf:"bytes,1,req,name=remoteIp" json:"remoteIp,omitempty"`
	RemotePort       *int32   `protobuf:"varint,2,req,name=remotePort" json:"remotePort,omitempty"`
	CastTime         *float64 `protobuf:"fixed64,3,req,name=castTime" json:"castTime,omitempty"`
	ErrnoCode        *int32   `protobuf:"varint,4,req,name=errnoCode" json:"errnoCode,omitempty"`
	ErronMesage      *string  `protobuf:"bytes,5,req,name=erronMesage" json:"erronMesage,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SocketConnect) Reset()         { *m = SocketConnect{} }
func (m *SocketConnect) String() string { return proto.CompactTextString(m) }
func (*SocketConnect) ProtoMessage()    {}

func (m *SocketConnect) GetRemoteIp() string {
	if m != nil && m.RemoteIp != nil {
		return *m.RemoteIp
	}
	return ""
}

func (m *SocketConnect) GetRemotePort() int32 {
	if m != nil && m.RemotePort != nil {
		return *m.RemotePort
	}
	return 0
}

func (m *SocketConnect) GetCastTime() float64 {
	if m != nil && m.CastTime != nil {
		return *m.CastTime
	}
	return 0
}

func (m *SocketConnect) GetErrnoCode() int32 {
	if m != nil && m.ErrnoCode != nil {
		return *m.ErrnoCode
	}
	return 0
}

func (m *SocketConnect) GetErronMesage() string {
	if m != nil && m.ErronMesage != nil {
		return *m.ErronMesage
	}
	return ""
}

type SocketSendRecvData struct {
	RemoteIp         *string  `protobuf:"bytes,1,req,name=remoteIp" json:"remoteIp,omitempty"`
	RemotePort       *int32   `protobuf:"varint,2,req,name=remotePort" json:"remotePort,omitempty"`
	CastTime         *float64 `protobuf:"fixed64,3,req,name=castTime" json:"castTime,omitempty"`
	ErrnoCode        *int32   `protobuf:"varint,4,req,name=errnoCode" json:"errnoCode,omitempty"`
	ErronMesage      *string  `protobuf:"bytes,5,req,name=erronMesage" json:"erronMesage,omitempty"`
	MethodName       *string  `protobuf:"bytes,6,req,name=methodName" json:"methodName,omitempty"`
	DataSize         *int32   `protobuf:"varint,7,req,name=dataSize" json:"dataSize,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *SocketSendRecvData) Reset()         { *m = SocketSendRecvData{} }
func (m *SocketSendRecvData) String() string { return proto.CompactTextString(m) }
func (*SocketSendRecvData) ProtoMessage()    {}

func (m *SocketSendRecvData) GetRemoteIp() string {
	if m != nil && m.RemoteIp != nil {
		return *m.RemoteIp
	}
	return ""
}

func (m *SocketSendRecvData) GetRemotePort() int32 {
	if m != nil && m.RemotePort != nil {
		return *m.RemotePort
	}
	return 0
}

func (m *SocketSendRecvData) GetCastTime() float64 {
	if m != nil && m.CastTime != nil {
		return *m.CastTime
	}
	return 0
}

func (m *SocketSendRecvData) GetErrnoCode() int32 {
	if m != nil && m.ErrnoCode != nil {
		return *m.ErrnoCode
	}
	return 0
}

func (m *SocketSendRecvData) GetErronMesage() string {
	if m != nil && m.ErronMesage != nil {
		return *m.ErronMesage
	}
	return ""
}

func (m *SocketSendRecvData) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *SocketSendRecvData) GetDataSize() int32 {
	if m != nil && m.DataSize != nil {
		return *m.DataSize
	}
	return 0
}

type MethodData struct {
	MethodName       *string       `protobuf:"bytes,1,req,name=methodName" json:"methodName,omitempty"`
	ClassName        *string       `protobuf:"bytes,2,req,name=className" json:"className,omitempty"`
	CastTime         *float64      `protobuf:"fixed64,3,req,name=castTime" json:"castTime,omitempty"`
	IsMainThread     *bool         `protobuf:"varint,4,req,name=isMainThread" json:"isMainThread,omitempty"`
	Params           *string       `protobuf:"bytes,5,req,name=params" json:"params,omitempty"`
	MetricDatas      []*MetricData `protobuf:"bytes,6,rep,name=metricDatas" json:"metricDatas,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *MethodData) Reset()         { *m = MethodData{} }
func (m *MethodData) String() string { return proto.CompactTextString(m) }
func (*MethodData) ProtoMessage()    {}

func (m *MethodData) GetMethodName() string {
	if m != nil && m.MethodName != nil {
		return *m.MethodName
	}
	return ""
}

func (m *MethodData) GetClassName() string {
	if m != nil && m.ClassName != nil {
		return *m.ClassName
	}
	return ""
}

func (m *MethodData) GetCastTime() float64 {
	if m != nil && m.CastTime != nil {
		return *m.CastTime
	}
	return 0
}

func (m *MethodData) GetIsMainThread() bool {
	if m != nil && m.IsMainThread != nil {
		return *m.IsMainThread
	}
	return false
}

func (m *MethodData) GetParams() string {
	if m != nil && m.Params != nil {
		return *m.Params
	}
	return ""
}

func (m *MethodData) GetMetricDatas() []*MetricData {
	if m != nil {
		return m.MetricDatas
	}
	return nil
}

type WebViewData struct {
	Url              *string  `protobuf:"bytes,1,req,name=url" json:"url,omitempty"`
	CastTime         *float64 `protobuf:"fixed64,2,req,name=castTime" json:"castTime,omitempty"`
	WebviewName      *string  `protobuf:"bytes,3,req,name=webviewName" json:"webviewName,omitempty"`
	ErrnoCode        *int32   `protobuf:"varint,4,req,name=errnoCode" json:"errnoCode,omitempty"`
	ErronMesage      *string  `protobuf:"bytes,5,req,name=erronMesage" json:"erronMesage,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *WebViewData) Reset()         { *m = WebViewData{} }
func (m *WebViewData) String() string { return proto.CompactTextString(m) }
func (*WebViewData) ProtoMessage()    {}

func (m *WebViewData) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *WebViewData) GetCastTime() float64 {
	if m != nil && m.CastTime != nil {
		return *m.CastTime
	}
	return 0
}

func (m *WebViewData) GetWebviewName() string {
	if m != nil && m.WebviewName != nil {
		return *m.WebviewName
	}
	return ""
}

func (m *WebViewData) GetErrnoCode() int32 {
	if m != nil && m.ErrnoCode != nil {
		return *m.ErrnoCode
	}
	return 0
}

func (m *WebViewData) GetErronMesage() string {
	if m != nil && m.ErronMesage != nil {
		return *m.ErronMesage
	}
	return ""
}

type MemoryWaringData struct {
	UsedMemory       *float64 `protobuf:"fixed64,1,req,name=usedMemory" json:"usedMemory,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MemoryWaringData) Reset()         { *m = MemoryWaringData{} }
func (m *MemoryWaringData) String() string { return proto.CompactTextString(m) }
func (*MemoryWaringData) ProtoMessage()    {}

func (m *MemoryWaringData) GetUsedMemory() float64 {
	if m != nil && m.UsedMemory != nil {
		return *m.UsedMemory
	}
	return 0
}

type ThreadANR struct {
	TheadID          *int32  `protobuf:"varint,1,req,name=theadID" json:"theadID,omitempty"`
	StartANR         *int64  `protobuf:"varint,2,req,name=startANR" json:"startANR,omitempty"`
	DurationANR      *int32  `protobuf:"varint,3,req,name=durationANR" json:"durationANR,omitempty"`
	ThreadDump       *string `protobuf:"bytes,4,opt,name=threadDump" json:"threadDump,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ThreadANR) Reset()         { *m = ThreadANR{} }
func (m *ThreadANR) String() string { return proto.CompactTextString(m) }
func (*ThreadANR) ProtoMessage()    {}

func (m *ThreadANR) GetTheadID() int32 {
	if m != nil && m.TheadID != nil {
		return *m.TheadID
	}
	return 0
}

func (m *ThreadANR) GetStartANR() int64 {
	if m != nil && m.StartANR != nil {
		return *m.StartANR
	}
	return 0
}

func (m *ThreadANR) GetDurationANR() int32 {
	if m != nil && m.DurationANR != nil {
		return *m.DurationANR
	}
	return 0
}

func (m *ThreadANR) GetThreadDump() string {
	if m != nil && m.ThreadDump != nil {
		return *m.ThreadDump
	}
	return ""
}

type MetricData struct {
	Fps              *float32                     `protobuf:"fixed32,1,opt,name=fps" json:"fps,omitempty"`
	Cpu              *float32                     `protobuf:"fixed32,2,opt,name=cpu" json:"cpu,omitempty"`
	StartBattery     *int32                       `protobuf:"varint,3,opt,name=startBattery" json:"startBattery,omitempty"`
	CurrentBattery   *int32                       `protobuf:"varint,4,opt,name=currentBattery" json:"currentBattery,omitempty"`
	MetricType       *MetricType                  `protobuf:"varint,5,req,name=metricType,enum=protocol.MetricType" json:"metricType,omitempty"`
	Memory           *MetricData_MetricMemoryData `protobuf:"bytes,6,opt,name=memory" json:"memory,omitempty"`
	MetricName       *string                      `protobuf:"bytes,7,opt,name=metricName" json:"metricName,omitempty"`
	Time             *int32                       `protobuf:"varint,8,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *MetricData) Reset()         { *m = MetricData{} }
func (m *MetricData) String() string { return proto.CompactTextString(m) }
func (*MetricData) ProtoMessage()    {}

func (m *MetricData) GetFps() float32 {
	if m != nil && m.Fps != nil {
		return *m.Fps
	}
	return 0
}

func (m *MetricData) GetCpu() float32 {
	if m != nil && m.Cpu != nil {
		return *m.Cpu
	}
	return 0
}

func (m *MetricData) GetStartBattery() int32 {
	if m != nil && m.StartBattery != nil {
		return *m.StartBattery
	}
	return 0
}

func (m *MetricData) GetCurrentBattery() int32 {
	if m != nil && m.CurrentBattery != nil {
		return *m.CurrentBattery
	}
	return 0
}

func (m *MetricData) GetMetricType() MetricType {
	if m != nil && m.MetricType != nil {
		return *m.MetricType
	}
	return MetricType_Metric_Normal
}

func (m *MetricData) GetMemory() *MetricData_MetricMemoryData {
	if m != nil {
		return m.Memory
	}
	return nil
}

func (m *MetricData) GetMetricName() string {
	if m != nil && m.MetricName != nil {
		return *m.MetricName
	}
	return ""
}

func (m *MetricData) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

type MetricData_MetricMemoryData struct {
	Vss              *float32 `protobuf:"fixed32,1,opt,name=vss" json:"vss,omitempty"`
	Uss              *float32 `protobuf:"fixed32,2,opt,name=uss" json:"uss,omitempty"`
	Pss              *float32 `protobuf:"fixed32,3,opt,name=pss" json:"pss,omitempty"`
	Rss              *float32 `protobuf:"fixed32,4,opt,name=rss" json:"rss,omitempty"`
	Total            *float32 `protobuf:"fixed32,5,opt,name=total" json:"total,omitempty"`
	Free             *float32 `protobuf:"fixed32,6,opt,name=free" json:"free,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *MetricData_MetricMemoryData) Reset()         { *m = MetricData_MetricMemoryData{} }
func (m *MetricData_MetricMemoryData) String() string { return proto.CompactTextString(m) }
func (*MetricData_MetricMemoryData) ProtoMessage()    {}

func (m *MetricData_MetricMemoryData) GetVss() float32 {
	if m != nil && m.Vss != nil {
		return *m.Vss
	}
	return 0
}

func (m *MetricData_MetricMemoryData) GetUss() float32 {
	if m != nil && m.Uss != nil {
		return *m.Uss
	}
	return 0
}

func (m *MetricData_MetricMemoryData) GetPss() float32 {
	if m != nil && m.Pss != nil {
		return *m.Pss
	}
	return 0
}

func (m *MetricData_MetricMemoryData) GetRss() float32 {
	if m != nil && m.Rss != nil {
		return *m.Rss
	}
	return 0
}

func (m *MetricData_MetricMemoryData) GetTotal() float32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *MetricData_MetricMemoryData) GetFree() float32 {
	if m != nil && m.Free != nil {
		return *m.Free
	}
	return 0
}

type BatteryData struct {
	StartBattery     *int32                         `protobuf:"varint,1,req,name=startBattery" json:"startBattery,omitempty"`
	Batterys         []*BatteryData_BatteryItemData `protobuf:"bytes,2,rep" json:"Batterys,omitempty"`
	XXX_unrecognized []byte                         `json:"-"`
}

func (m *BatteryData) Reset()         { *m = BatteryData{} }
func (m *BatteryData) String() string { return proto.CompactTextString(m) }
func (*BatteryData) ProtoMessage()    {}

func (m *BatteryData) GetStartBattery() int32 {
	if m != nil && m.StartBattery != nil {
		return *m.StartBattery
	}
	return 0
}

func (m *BatteryData) GetBatterys() []*BatteryData_BatteryItemData {
	if m != nil {
		return m.Batterys
	}
	return nil
}

type BatteryData_BatteryItemData struct {
	CurrentBattery   *int32 `protobuf:"varint,1,req,name=currentBattery" json:"currentBattery,omitempty"`
	TimeSection      *int32 `protobuf:"varint,2,req,name=timeSection" json:"timeSection,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *BatteryData_BatteryItemData) Reset()         { *m = BatteryData_BatteryItemData{} }
func (m *BatteryData_BatteryItemData) String() string { return proto.CompactTextString(m) }
func (*BatteryData_BatteryItemData) ProtoMessage()    {}

func (m *BatteryData_BatteryItemData) GetCurrentBattery() int32 {
	if m != nil && m.CurrentBattery != nil {
		return *m.CurrentBattery
	}
	return 0
}

func (m *BatteryData_BatteryItemData) GetTimeSection() int32 {
	if m != nil && m.TimeSection != nil {
		return *m.TimeSection
	}
	return 0
}

type FpsData struct {
	Fps              *int32  `protobuf:"varint,1,req,name=fps" json:"fps,omitempty"`
	TimeSection      *int32  `protobuf:"varint,2,req,name=timeSection" json:"timeSection,omitempty"`
	Note             *string `protobuf:"bytes,3,opt,name=note" json:"note,omitempty"`
	SnapShot         []byte  `protobuf:"bytes,4,opt,name=snapShot" json:"snapShot,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *FpsData) Reset()         { *m = FpsData{} }
func (m *FpsData) String() string { return proto.CompactTextString(m) }
func (*FpsData) ProtoMessage()    {}

func (m *FpsData) GetFps() int32 {
	if m != nil && m.Fps != nil {
		return *m.Fps
	}
	return 0
}

func (m *FpsData) GetTimeSection() int32 {
	if m != nil && m.TimeSection != nil {
		return *m.TimeSection
	}
	return 0
}

func (m *FpsData) GetNote() string {
	if m != nil && m.Note != nil {
		return *m.Note
	}
	return ""
}

func (m *FpsData) GetSnapShot() []byte {
	if m != nil {
		return m.SnapShot
	}
	return nil
}

func init() {
	proto.RegisterEnum("protocol.CmdType", CmdType_name, CmdType_value)
	proto.RegisterEnum("protocol.HttpErrorType", HttpErrorType_name, HttpErrorType_value)
	proto.RegisterEnum("protocol.MetricType", MetricType_name, MetricType_value)
}
